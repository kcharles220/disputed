name: Deploy backend to Oracle VM

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Code Checkout
      uses: actions/checkout@v3

    - name: Create target folder if not exists & Copy backend files to VM
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_KEY }}
        source: "backend"
        target: "~/disputed"
        rm: true

    - name: SSH into VM and start backend
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_KEY }}
        script: |
          mkdir -p ~/disputed/backend
          cd ~/disputed/backend

          # Generate SSL certificate if it doesn't exist
          if [ ! -f "key.pem" ] || [ ! -f "cert.pem" ]; then
            echo "Generating SSL certificate..."
            openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj "/CN=${{ secrets.VM_HOST }}"
            echo "SSL certificate generated successfully"
          else
            echo "SSL certificate already exists"
          fi

          # environment variables here
          echo "PORT=3001" > .env
          echo "SERVER_URL=${{ secrets.VM_HOST }}" >> .env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
          echo "AI_API_KEY=${{ secrets.AI_API_KEY }}" >> .env
          echo "AUTH_TOKEN=${{ secrets.AUTH_TOKEN }}" >> .env
          echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> .env
          echo "RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}" >> .env
          
          npm install
          pm2 start server2.js --name backend || pm2 restart backend --update-env